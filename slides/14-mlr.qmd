---
title: "Multiple linear regression (MLR)"
author: "Prof. Eric Friedlander"
date: "2024-09-30"
date-format: "MMM DD, YYYY"
footer: "[ðŸ”— MAT 212 - Fall 2024 -  Schedule](https://mat212fa24.netlify.app/schedule)"
logo: "../images/logo.png"
format: 
  revealjs:
    theme: slides.scss
    multiplex: false
    transition: fade
    slide-number: false
    incremental: false 
    chalkboard: true
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
execute:
  freeze: auto
  echo: true
  cache: false
knitr:
  opts_chunk: 
    R.options:      
    width: 200
bibliography: references.bib
---

## Trying something new {.smaller}

-   Open but do not start AE-10 
-   Notify Dr. F when you're ready to proceed
-   The goal is to integrate the activity into the lecture (keep track of how you like this approach and give Dr. F feedback at the end of class)
-   While you're waiting feel free to start on Exercise 0

::: appex
ðŸ“‹ [AE 10 - Credit Cards](https://mat212fa24.netlify.app/ae/ae-10-mlr)
:::

## Computational setup

```{r packages}
#| echo: true
#| message: false

# load packages
library(tidyverse)
library(broom)
library(mosaic)
library(ISLR2)
library(patchwork)
library(knitr)
library(kableExtra)
library(scales)

# set default theme and larger font size for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 16))
```

# Considering multiple variables

## Data: Credit Cards

The data is from the `Credit` data set in the **ISLR2** R package. It is a simulated data set of 400 credit card customers.

```{r}
#| echo: false
Credit |>  glimpse()
```

## Variables

**Features (another name for predictors)**

-   `Income`: Annual income (in 1000's of US dollars)
-   `Rating`: Credit Rating

**Outcome**

-   `Limit`: Credit limit

::: appex
Complete Exercises 0-1. Please don't look ahead in the slides.
:::

## Outcome: `Limit`

```{r}
#| code-fold: true
Credit |> 
  gf_density(~Limit, fill = "steelblue") |> 
  gf_labs(title = "Distribution of credit limit",
          x = "Credit Limit")|> 
  gf_refine(scale_x_continuous(labels = dollar_format()))
```

```{r}
#| echo: false
favstats(~Limit, data = Credit)|>
  kable("html") |> 
  kable_styling(font_size = 24)
```

## Predictors {.small}

```{r}
#| code-fold: true
#| out.width: "100%"
p1 <- Credit |> 
  gf_density(~Limit, fill = "steelblue") |> 
  gf_labs(title = "Distribution of credit limit",
          x = "Credit Limit")|> 
    gf_refine(scale_x_continuous(labels = dollar_format()))

p2 <- Credit |> 
  gf_histogram(~Rating, binwidth = 50) |> 
  gf_labs(title = "",
       x = "Credit Rating")

p3 <- Credit |> 
  gf_histogram(~Income, binwidth = 10) |> 
  gf_labs(title = "",
       x = "Annual income (in $1,000s)") |> 
  gf_refine(scale_x_continuous(labels = dollar_format()))

p1 / (p2 + p3)
```

## Outcome vs. predictors {.small}

```{r}
#| code-fold: true
p4 <- Credit |> 
  gf_point(Limit ~ Rating, color = "steelblue") |> 
  gf_labs(
    y = "Credit Limit",
    x = "Credit Rating"
  ) |> 
  gf_refine(scale_y_continuous(labels = dollar_format()))


p5 <- Credit |> 
  gf_point(Limit ~ Income, color = "steelblue") |> 
  gf_labs(
    y = "Credit Limit",
    x = "Annual income (in $1,000s)"
  ) |> 
  gf_refine(scale_x_continuous(labels = dollar_format()),
                               scale_y_continuous(labels = percent_format(scale = 1)))

p4 / p5
```

## Single vs. multiple predictors

So far we've used a *single predictor variable* to understand variation in a quantitative response variable

. . .

Now we want to use *multiple predictor variables* to understand variation in a quantitative response variable

# Multiple linear regression

## Multiple linear regression (MLR) {.smaller}

Based on the analysis goals, we will use a **multiple linear regression** model of the following form

$$
\begin{aligned}\hat{\text{Limit}} ~ = 
\hat{\beta}_0 & + \hat{\beta}_1 \text{Rating} + \hat{\beta}_2 \text{Income}
\end{aligned}
$$

Similar to simple linear regression, this model assumes that at each combination of the predictor variables, the values `Limit` follow a Normal distribution.

## Multiple linear regression

**Recall:** The simple linear regression model assumes

$$
Y|X\sim N(\beta_0 + \beta_1 X, \sigma_{\epsilon}^2)
$$

. . .

**Similarly:** The multiple linear regression model assumes

$$
Y|X_1, X_2, \ldots, X_p \sim N(\beta_0 + \beta_1 X_1 + \beta_2 X_2 + \dots + \beta_p X_p, \sigma_{\epsilon}^2)
$$

## Multiple linear regression

At any combination of the predictors, the mean value of the response $Y$, is

$$
\mu_{Y|X_1, \ldots, X_p} = \beta_0 + \beta_1 X_{1} + \beta_2 X_2 + \dots + \beta_p X_p
$$

. . .

Using multiple linear regression, we can estimate the mean response for any combination of predictors

$$
\hat{Y} = \hat{\beta}_0 + \hat{\beta}_1 X_{1} + \hat{\beta}_2 X_2 + \dots + \hat{\beta}_p X_{p}
$$


# Model fit

::: appex
Complete exercises 2-4 in the application exercise. Don't look ahead! 
:::

## Model fit

```{r}
#| echo: false
lim_fit <- lm(Limit ~ Rating   + Income,
      data = Credit)

tidy(lim_fit) |>
  kable(digits = 3)
```

## Model equation

$$
\begin{align}\hat{\text{Limit}} =  -532.471 &+14.771 \times \text{Rating}\\
& -0.557 \times \text{Income}
\end{align}
$$

## Interpreting $\hat{\beta}_j$

-   The estimated coefficient $\hat{\beta}_j$ is the expected change in the mean of $y$ when $x_j$ increases by one unit, *holding the values of all other predictor variables constant*.

. . .

::: appex
Complete Exercises 5-6.
:::

## Prediction

::: question
What is the predicted credit limit for an borrower with an credit rating of ratio of 700, and who has an annual income of \$59,000?
:::

<br>

```{r}
#| echo: true

-532.471 + 14.771 * 700 + - .577 * 59

```

. . .

The predicted credit limit for an borrower with an credit rating of ratio of 700, and who has an annual income of \$59,000 is \$`r round(-532.471 + 14.771 * 700 + - .577 * 59,2)`.

## Prediction, revisited {.midi}

Just like with simple linear regression, we can use the `predict` function in R to calculate the appropriate intervals for our predicted values:

```{r}
#| echo: false

new_borrower <- tibble(
  Rating  = 700, 
  Income = 59
)

predict(lim_fit, new_borrower, interval="prediction")
```

::: callout-note
Difference in predicted value due to rounding the coefficients on the previous slide.
:::

## Prediction interval for $\hat{y}$

::: question
Calculate a 90% confidence interval for the **predicted credit limit** for an individual borrower an credit rating of ratio of 700, and who has an annual income of \$59,000?
:::

<br>

```{r}
#| echo: true

predict(lim_fit, new_borrower, interval = "prediction", level = 0.90)
```

::: question
When would you use `"confidence"`? Would the interval be wider or narrower?
:::

## Cautions

-   **Do not extrapolate!** Because there are multiple predictor variables, there is the potential to extrapolate in many directions
-   The multiple regression model only shows **association, not causality**
    -   To show causality, you must have a carefully designed experiment or carefully account for confounding variables in an observational study
    
## Visualizing Model

```{r}
#| echo: FALSE
library(plotly)
library(reshape2)
credit_plot <- plot_ly(Credit, 
         x = ~Rating, 
         y = ~Income, 
         z = ~Limit,
         color = I("red"),
         opacity = 1,
         type = "scatter3d", 
         mode = "markers",
         size = 1)

axis_x <- seq(min(Credit$Rating), max(Credit$Rating), length.out = 100)
axis_y <- seq(min(Credit$Income), max(Credit$Income), length.out = 100)

#Sample points
credit_lm_surface <- expand.grid(Rating = axis_x,Income = axis_y,KEEP.OUT.ATTRS = F)
credit_lm_surface$Limit <- predict.lm(lim_fit, newdata = credit_lm_surface)
credit_lm_surface <- acast(credit_lm_surface, Income ~ Rating, value.var = "Limit")

credit_plot |> 
  add_surface(z = credit_lm_surface,
           x = axis_x,
           y = axis_y,
           opacity = 0.8,
           inherit = FALSE,
           contours = list(z = list(show = TRUE, width = 2,
                                       highlightcolor = "#ff0000", 
                                       project = list(z = TRUE)),
                              coloring = "heatmap"))
```


# Interaction terms

## Interaction terms {.smaller}

-   Sometimes the relationship between a predictor variable and the response depends on the value of another predictor variable.
-   This is an **interaction effect**.
-   To account for this, we can include **interaction terms** in the model.
-   We want a model of the form:

$$
\begin{aligned}\hat{\text{Limit}} ~ = 
\hat{\beta}_0 & + \hat{\beta}_1 \text{Rating} + \hat{\beta}_2 \text{Income} +
\hat{\beta}_3\text{Rating}\times\text{Income}
\end{aligned}
$$

## Interpreting interaction terms

-   What the interaction means: The effect of annual income on the credit limit depends on the borrowers credit rating

## Visualizing Interaction Model Exaggerated

```{r}
#| echo: FALSE

lim_fit_int <- lm(Limit ~ Rating  + Income + Rating * Income,
      data = Credit)

lim_fit_int$coefficients[3] <- 200

#Sample points
credit_lm_surface <- expand.grid(Rating = axis_x,Income = axis_y,KEEP.OUT.ATTRS = F)
credit_lm_surface$Limit <- predict.lm(lim_fit_int, newdata = credit_lm_surface)
credit_lm_surface <- acast(credit_lm_surface, Income ~ Rating, value.var = "Limit")

credit_plot |> 
  add_surface(z = credit_lm_surface,
           x = axis_x,
           y = axis_y,
           opacity = 0.8,
           inherit = FALSE,
           contours = list(z = list(show = TRUE, width = 2,
                                       highlightcolor = "#ff0000", 
                                       project = list(z = TRUE)),
                              coloring = "heatmap"))
```

## Visualizing Interaction Model

```{r}
#| echo: FALSE

lim_fit_int <- lm(Limit ~ Rating  + Income + Rating * Income,
      data = Credit)

#Sample points
credit_lm_surface <- expand.grid(Rating = axis_x,Income = axis_y,KEEP.OUT.ATTRS = F)
credit_lm_surface$Limit <- predict.lm(lim_fit_int, newdata = credit_lm_surface)
credit_lm_surface <- acast(credit_lm_surface, Income ~ Rating, value.var = "Limit")

credit_plot |> 
  add_surface(z = credit_lm_surface,
           x = axis_x,
           y = axis_y,
           opacity = 0.8,
           inherit = FALSE,
           contours = list(z = list(show = TRUE, width = 2,
                                       highlightcolor = "#ff0000", 
                                       project = list(z = TRUE)),
                              coloring = "heatmap"))
```

## Application Exercise

::: appex
Complete Activity
:::

## Model Fit {.smaller}

```{r}
#| echo: FALSE
lm(Limit ~ Income + Rating + Income * Rating, data = Credit) |> 
  tidy() |> 
  kable(digits = 5)
```

$$
\begin{aligned}\hat{\text{Limit}} ~ = 
&  -579.85561 + 14.87125~\text{Rating} + 1.81240~\text{Income}\\
& \qquad- 0.00221~\text{Rating}\times\text{Income}
\end{aligned}
$$

## Interpreting the interaction term

-  For a fixed `Rating` the slope of `Income` is $(1.81240 - 0.0021\times\text{Rating})$
-  For a fixed `Income` the slope of `Rating` is $(14.87125 - 0.0021\times\text{Income})$



## What's actually happening: {.smaller}

```{r}
#| echo: TRUE
Credit_int <- Credit |> 
  mutate(Interaction = Income * Rating) 

Credit_int |> 
  select(Limit, Income, Rating, Interaction) |> 
  head() |> 
  kable()
```

## What's actually happening:

```{r}
lm(Limit ~ Income + Rating + Interaction, data = Credit_int) |> 
  tidy() |> 
  kable(digits = 5)
```


# Wrap up

## Recap

-   Introduced multiple linear regression

-   Interpreted coefficients in the multiple linear regression model

-   Calculated predictions and associated intervals for multiple linear regression models

-   Used interaction terms
