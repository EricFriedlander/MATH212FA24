---
title: "Multiple linear regression (MLR)"
author: "Prof. Eric Friedlander"
date: "2024-08-28"
date-format: "MMM DD, YYYY"
footer: "[ðŸ”— MAT 212 - Fall 2024 -  Schedule](https://mat212fa24.netlify.app/schedule)"
logo: "../images/logo.png"
format: 
  revealjs:
    theme: slides.scss
    multiplex: false
    transition: fade
    slide-number: false
    incremental: false 
    chalkboard: true
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
execute:
  freeze: auto
  echo: true
  cache: true
knitr:
  opts_chunk: 
    R.options:      
    width: 200
bibliography: references.bib
---

<!-- ## Announcements {.midi} -->

<!-- -   HW 02 due Mon, Oct 2 at 11:59pm. -->
<!-- -   All lecture recordings available until Wed, Oct 4 at 9am. -->
<!--     -   [Click here](https://docs.google.com/spreadsheets/d/1dUD4SOpM79BL2kdvue9I2TP-ibcdxfpOIkHkMreYx64/edit?usp=sharing) for link to videos. You can also find the link in the navigation bar of the course website. -->
<!-- -   Lab groups start this week. You will get your assigned group when you go to lab. -->
<!-- -   Submit questions about SLR by Thu, Sep 28. These questions will be used to make the Exam Review. [Click here](https://sta210-fa23.netlify.app/slides/08-slr-model-eval#/questions-about-slr) for more info. -->
<!-- -   Exam 01: Wed, Oct 4 (in-class + take-home) -->
<!-- -   Exam 01 review: Mon, Oct 2 -->

## Computational setup

```{r packages}
#| echo: true
#| message: false

# load packages
library(tidyverse)
library(broom)
library(mosaic)
library(openintro)
library(patchwork)
library(knitr)
library(kableExtra)

# set default theme and larger font size for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 16))
```

# Considering multiple variables

## Data: Peer-to-peer lender

Today's data is a sample of 50 loans made through a peer-to-peer lending club. The data is in the `loan50` data frame in the **openintro** R package.

```{r}
#| echo: false
loan50 |>
  select(annual_income, debt_to_income, verified_income, interest_rate) |> 
  head(10) |> 
  kable("html") |> 
  kable_styling(font_size = 18)
```

## Variables

**Predictors**:

::: nonincremental
-   `annual_income`: Annual income
-   `debt_to_income`: Debt-to-income ratio, i.e. the percentage of a borrower's total debt divided by their total income
-   `verified_income`: Whether borrower's income source and amount have been verified (`Not Verified`, `Source Verified`, `Verified`)
:::

**Outcome**: `interest_rate`: Interest rate for the loan

## Outcome: `interest_rate`

```{r}
#| echo: false
ggplot(loan50, aes(x = interest_rate)) +
  geom_density(fill = "steelblue") +
  labs(title = "Distribution of interest rate")
```

```{r}
#| echo: false
favstats(~interest_rate, data = loan50)|>
  kable("html") |> 
  kable_styling(font_size = 24)
```

## Predictors {.small}

```{r}
#| echo: false
#| out.width: "100%"
p1 <- ggplot(loan50, aes(y = verified_income)) +
  geom_bar() +
  labs(title = "Verified Income", 
       y = "")

p2 <- ggplot(loan50, aes(x = debt_to_income)) +
  geom_histogram(binwidth = 0.25) +
  labs(title = "",
       x = "Debt to income ratio")

p3 <- ggplot(loan50, aes(x = annual_income)) +
  geom_histogram(binwidth = 20000) +
  labs(title = "",
       x = "Annual income")

p1 + p2 / p3
```

## Data manipulation 1: Rescale income

```{r}
#| echo: true

loan50 <- loan50 |>
  mutate(annual_income_k = annual_income / 1000)

gf_histogram(~annual_income_k, data = loan50, binwidth = 20) |> 
  gf_labs(title = "Annual income (in $1000s)", 
       x = "")
```

## Outcome vs. predictors {.small}

```{r}
#| echo: false
p4 <- ggplot(loan50, aes(x = verified_income, y = interest_rate)) +
  geom_boxplot(fill = "steelblue") +
  labs(
    y = "Interest Rate",
    x = "Income verification"
  )

p5 <- ggplot(loan50, aes(x = debt_to_income, y = interest_rate)) +
  geom_point(color = "steelblue") +
  labs(
    y = NULL,
    x = "Debt to income ratio"
  )


p6 <- ggplot(loan50, aes(x = annual_income_k, y = interest_rate)) +
  geom_point(color = "steelblue") +
  labs(
    y = NULL,
    x = "Annual income (in $1000s)"
  )

p4 + p5 / p6
```

## Single vs. multiple predictors

So far we've used a *single predictor variable* to understand variation in a quantitative response variable

. . .

Now we want to use *multiple predictor variables* to understand variation in a quantitative response variable

# Multiple linear regression

## Multiple linear regression (MLR) {.smaller}

Based on the analysis goals, we will use a **multiple linear regression** model of the following form

$$
\begin{aligned}\hat{\text{interest_rate}} ~ = 
\hat{\beta}_0 & + \hat{\beta}_1 \text{debt_to_income} \\ & + \hat{\beta}_2 \text{verified_income} \\ &+ \hat{\beta}_3 \text{annual_income_th}
\end{aligned}
$$

Similar to simple linear regression, this model assumes that at each combination of the predictor variables, the values `interest_rate` follow a Normal distribution.

## Multiple linear regression

**Recall:** The simple linear regression model assumes

$$
Y|X\sim N(\beta_0 + \beta_1 X, \sigma_{\epsilon}^2)
$$

. . .

**Similarly:** The multiple linear regression model assumes

$$
Y|X_1, X_2, \ldots, X_p \sim N(\beta_0 + \beta_1 X_1 + \beta_2 X_2 + \dots + \beta_p X_p, \sigma_{\epsilon}^2)
$$

## Multiple linear regression

At any combination of the predictors, the mean value of the response $Y$, is

$$
\mu_{Y|X_1, \ldots, X_p} = \beta_0 + \beta_1 X_{1} + \beta_2 X_2 + \dots + \beta_p X_p
$$

. . .

Using multiple linear regression, we can estimate the mean response for any combination of predictors

$$
\hat{Y} = \hat{\beta}_0 + \hat{\beta}_1 X_{1} + \hat{\beta}_2 X_2 + \dots + \hat{\beta}_p X_{p}
$$

# Model fit {.smaller}

```{r}
#| echo: false

int_fit <- lm(interest_rate ~ debt_to_income + verified_income  + annual_income_k,
      data = loan50)

tidy(int_fit) |>
  kable(digits = 3)
```

## Model equation

$$
\begin{align}\hat{\text{interest_rate}} =  10.726 &+0.671 \times \text{debt_to_income}\\
&+ 2.211 \times \text{source_verified}\\  
&+ 6.880 \times \text{verified}\\
& -0.021 \times \text{annual_income_th}
\end{align}
$$

::: callout-note
We will talk about why there are two terms in the model for `verified_income` shortly!
:::

## Interpreting $\hat{\beta}_j$

-   The estimated coefficient $\hat{\beta}_j$ is the expected change in the mean of $y$ when $x_j$ increases by one unit, *holding the values of all other predictor variables constant*.

. . .

-   **Example:** The estimated coefficient for `debt_to_income` is 0.671. This means for each point in an borrower's debt to income ratio, the interest rate on the loan is expected to be greater by 0.671%, holding annual income and income verification constant.


## Prediction

::: question
What is the predicted interest rate for an borrower with an debt-to-income ratio of 0.558, whose income is not verified, and who has an annual income of \$59,000?
:::

<br>

```{r}
#| echo: true

10.726 + 0.671 * 0.558 + 2.211 * 0 + 6.880 * 0 - 0.021 * 59

```

. . .

The predicted interest rate for an borrower with with an debt-to-income ratio of 0.558, whose income is not verified, and who has an annual income of \$59,000 is `r round(10.726 + 0.671 * 0.558 + 2.211 * 0 + 6.880 * 0 - 0.021 * 59,2)`%.

## Prediction, revisited {.midi}

Just like with simple linear regression, we can use the `predict()` function in R to calculate the appropriate intervals for our predicted values:

```{r}
#| echo: true

new_borrower <- tibble(
  debt_to_income  = 0.558, 
  verified_income = "Not Verified", 
  annual_income_k = 59
)

predict(int_fit, new_borrower)
```

::: callout-note
Difference in predicted value due to rounding the coefficients on the previous slide.
:::

## Confidence interval for $\hat{\mu}_y$

::: question
Calculate a 90% confidence interval for the **estimated mean interest rate** for borrowers with an debt-to-income ratio of 0.558, whose income is not verified, and who has an annual income of \$59,000.
:::

<br>

```{r}
#| echo: true

predict(int_fit, new_borrower, interval = "confidence", level = 0.90)
```

## Prediction interval for $\hat{y}$

::: question
Calculate a 90% confidence interval for the **predicted interest rate** for an individual applicant with an debt-to-income ratio of 0.558, whose income is not verified, and who has an annual income of \$59,000.
:::

<br>

```{r}
#| echo: true

predict(int_fit, new_borrower, interval = "prediction", level = 0.90)
```

## Cautions

-   **Do not extrapolate!** Because there are multiple predictor variables, there is the potential to extrapolate in many directions
-   The multiple regression model only shows **association, not causality**
    -   To show causality, you must have a carefully designed experiment or carefully account for confounding variables in an observational study

# Types of predictors

## Interpreting results {.smaller}

```{r}
#| echo: false
tidy(int_fit, conf.int = TRUE) |>
  kable(digits = 3)
```

. . .

<br>

::: question
Describe the subset of borrowers who are expected to get an interest rate of 10.726% based on our model. Is this interpretation meaningful? Why or why not?
:::

# Indicator variables

## Indicator variables

-   Suppose there is a categorical variable with $K$ categories (levels)

-   We can make $K$ indicator variables - one indicator for each category

-   An **indicator variable** takes values 1 or 0

    -   1 if the observation belongs to that category
    -   0 if the observation does not belong to that category

## Data manipulation 2: Create indicator variables for `verified_income`

```{r}
#| echo: true

loan50 <- loan50 |>
  mutate(
    not_verified = if_else(verified_income == "Not Verified", 1, 0),
    source_verified = if_else(verified_income == "Source Verified", 1, 0),
    verified = if_else(verified_income == "Verified", 1, 0)
  )
```

. . .

```{r}
#| echo: false
loan50 |>
  select(verified_income, not_verified, source_verified, verified) |>
  slice(1, 3, 6) |> 
  kable()
```

## Indicators in the model {.midi}

-   We will use $K-1$ of the indicator variables in the model.
-   The **reference level** is the category that doesn't have a term in the model.
-   The coefficients of the indicator variables in the model are interpreted as the expected change in the response compared to the baseline, holding all other variables constant.
-   This approach is also called **dummy coding**.

. . .

```{r}
loan50 |>
  select(verified_income, source_verified, verified) |>
  slice(1, 3, 6) |> 
  kable()
```


## Interpreting `verified_income` {.small}

```{r}
#| echo: false
tidy(int_fit, conf.int  = T) |>
  kable(digits = 3) |>
  row_spec(c(3,4), background = "#dce5b2")
```

. . .

::: incremental
-   The reference level is `Not verified`.
-   People with source verified income are expected to take a loan with an interest rate that is 2.211% higher, on average, than the rate on loans to those whose income is not verified, holding all else constant.
:::

. . .

::: question
Interpret the coefficient of `Verified` in the context of the data.
:::

# Interaction terms

## Interaction terms

-   Sometimes the relationship between a predictor variable and the response depends on the value of another predictor variable.
-   This is an **interaction effect**.
-   To account for this, we can include **interaction terms** in the model.

## Interest rate vs. annual income

The lines are not parallel indicating there is an **interaction effect**. The slope of annual income differs based on the income verification.

```{r}
#| echo: false

p1 <- ggplot(loan50, 
             aes(x = annual_income_k, y = interest_rate)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Annual income (in $1000s)",
    y = "Interest rate"
  )

p2 <- ggplot(loan50, 
             aes(x = annual_income_k, y = interest_rate,
                 color = verified_income)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Annual income (in $1000s)", y = NULL, color = NULL) +
  theme(legend.position = c(0.6, 0.9))

p1 + p2 +
  plot_annotation(title = "Interest rate vs. annual income")
```

# Interaction terms

## Interaction terms

-   Sometimes the relationship between a predictor variable and the response depends on the value of another predictor variable.
-   This is an **interaction effect**.
-   To account for this, we can include **interaction terms** in the model.

## Interest rate vs. annual income

The lines are not parallel indicating there is an **interaction effect**. The slope of annual income differs based on the income verification.

```{r}
#| echo: false

p1 <- ggplot(loan50, 
             aes(x = annual_income_th, y = interest_rate)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Annual income (in $1000s)",
    y = "Interest rate"
  )

p2 <- ggplot(loan50, 
             aes(x = annual_income_th, y = interest_rate,
                 color = verified_income)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Annual income (in $1000s)", y = NULL, color = NULL) +
  theme(legend.position = c(0.6, 0.9)) +
  scale_color_OkabeIto()

p1 + p2 +
  plot_annotation(title = "Interest rate vs. annual income")
```

## Interaction term in model {.smaller}

```{r}
#| echo: true
int_int_fit <- lm(interest_rate ~ debt_to_income + verified_income + annual_income_k + verified_income * annual_income_k,
      data = loan50)
```

```{r}
#| echo: false
tidy(int_int_fit) |>
  kable(digits = 3) |>
  row_spec(c(6,7), background = "#dce5b2")
```

## Interpreting interaction terms

-   What the interaction means: The effect of annual income on the interest rate differs by -0.016 when the income is source verified compared to when it is not verified, holding all else constant.
-   Interpreting `annual_income` for source verified: If the income is source verified, we expect the interest rate to decrease by 0.023% (-0.007 + -0.016) for each additional thousand dollars in annual income, holding all else constant.

## Data manipulation 3: Create interaction variables {.smaller}

Defining the interaction variable in the model formula as `verified_income * annual_income_th_cent` is an implicit data manipulation step as well

```{r}
#| echo: false
library(hardhat)

framed <- model_frame(interest_rate ~ debt_to_income  +  debt_to_income + annual_income_k + verified_income * annual_income_k, data = loan50)

model_matrix(framed$terms, framed$data) |>
  glimpse()
```
