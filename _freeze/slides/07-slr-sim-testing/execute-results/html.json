{
  "hash": "fd5033a8ce69090988909e7d671664ec",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"SLR: Randomization test for the slope\"\nauthor: \"Prof. Eric Friedlander\"\ndate: \"2024-09-06\"\ndate-format: \"MMM DD, YYYY\"\nfooter: \"[ðŸ”— MAT 212 - Fall 2024 -  Schedule](https://mat212fa24.netlify.app/schedule)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: false\n    incremental: false \n    chalkboard: true\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\nexecute:\n  freeze: auto\n  echo: true\n  cache: false\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\nbibliography: references.bib\n---\n\n\n# Application exercise\n\n::: appex\nðŸ“‹ [AE 03: Bootstrap confidence intervals](https://mat212fa24.netlify.app/ae/ae-03-bootstrap)\n:::\n\n## Concept Check\n\n:::{.question}\nYou professor is interested in calculating the average amount of time CofI students spend doing homework.\n\n1. If he collects a set of data and asks 100 students to compute 95% confidence intervals from that data, how many of those would you expect to contain the true average?\n2. If, instead, he has each of those 100 students collect their own data and compute 95% confidence intervals from their own data, how many would you expect to contain the true average?\n:::\n\n## From last time {.smaller}\n\n-   **Population:** Complete set of observations of whatever we are studying, e.g., people, tweets, photographs, etc. (population size = $N$)\n\n-   **Sample:** Subset of the population, ideally random and representative (sample size = $n$)\n\n-   Sample statistic $\\ne$ population parameter, but if the sample is good, it can be a good estimate\n\n-   **Statistical inference:** Discipline that concerns itself with the development of procedures, methods, and theorems that allow us to extract meaning and information from data that has been generated by stochastic (random) process\n\n-   We report the estimate with a confidence interval, and the width of this interval depends on the variability of sample statistics from different samples from the population\n\n-   Since we can't continue sampling from the population, we bootstrap from the one sample we have to estimate sampling variability\n\n\n## Topics\n\n-   Evaluate a claim about the slope using hypothesis testing\n\n-   Define mathematical models to conduct inference for slope\n\n## Computational setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)   # for data wrangling and visualization\nlibrary(broom)       # for nearly formatting model output\nlibrary(ggformula)   # for plotting\nlibrary(infer)       # for simulation based inference\nlibrary(scales)      # for pretty axis labels\nlibrary(knitr)       # for neatly formatted tables\n\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_bw(base_size = 16))\n```\n:::\n\n\n# Recap of last lecture\n\n## [Data: San Antonio Income & Organic Food Access]{.r-fit-text}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-slr-sim-testing_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n## The regression model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheb_fit <- lm(Number_Organic ~ Avg_Income_K, data = heb)\n\ntidy(heb_fit) |>\n  kable(digits = 2)\n```\n\n::: {.cell-output-display}\n\n\n|term         | estimate| std.error| statistic| p.value|\n|:------------|--------:|---------:|---------:|-------:|\n|(Intercept)  |   -14.72|      9.30|     -1.58|    0.12|\n|Avg_Income_K |     0.96|      0.13|      7.50|    0.00|\n\n\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n:::\n\n\n**Slope:** For each additional \\$1,000 in average household income, we expect the number of organic options available at nearby HEBs to increase by 0.96, on average.\n\n## Inference for simple linear regression\n\n-   Calculate a confidence interval for the slope, $\\beta_1$\n\n-   Conduct a hypothesis test for the slope, $\\beta_1$\n\n## Sampling is natural {.midi}\n\n![](images/05/soup.png){fig-alt=\"Illustration of a bowl of soup\" fig-align=\"center\"}\n\n-   When you taste a spoonful of soup and decide the spoonful you tasted isn't salty enough, that's exploratory analysis\n-   If you generalize and conclude that your entire soup needs salt, that's an inference\n-   For your inference to be valid, the spoonful you tasted (the sample) needs to be representative of the entire pot (the population)\n\n## Confidence interval via bootstrapping {.midi}\n\n-   Bootstrap new samples from the original sample\n-   Fit models to each of the samples and estimate the slope\n-   Use features of the distribution of the bootstrapped slopes to construct a confidence interval\n\n## Bootstrapping pipeline I\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|1|3|4\"}\nset.seed(210)\n\nheb |>\n  specify(Number_Organic ~ Avg_Income_K)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse: Number_Organic (numeric)\nExplanatory: Avg_Income_K (numeric)\n# A tibble: 37 Ã— 2\n   Number_Organic Avg_Income_K\n            <dbl>        <dbl>\n 1             36         71.2\n 2              4         34.2\n 3             28         71.2\n 4             31         48.8\n 5             78         78.1\n 6             14         40.5\n 7             12         38.2\n 8             18         50.4\n 9             38         49.4\n10             84         66.1\n# â„¹ 27 more rows\n```\n\n\n:::\n:::\n\n\n## Bootstrapping pipeline II\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|5\"}\nset.seed(210)\n\nheb |>\n  specify(Number_Organic ~ Avg_Income_K) |>\n  generate(reps = 1000, type = \"bootstrap\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse: Number_Organic (numeric)\nExplanatory: Avg_Income_K (numeric)\n# A tibble: 37,000 Ã— 3\n# Groups:   replicate [1,000]\n   replicate Number_Organic Avg_Income_K\n       <int>          <dbl>        <dbl>\n 1         1             65         50.3\n 2         1             61         86.6\n 3         1             85         78.2\n 4         1             86         86.6\n 5         1             26         48.4\n 6         1             12         38.2\n 7         1             93        136. \n 8         1             85         78.2\n 9         1             85         78.2\n10         1             96         77.9\n# â„¹ 36,990 more rows\n```\n\n\n:::\n:::\n\n\n## Bootstrapping pipeline III\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|6\"}\nset.seed(210)\n\nheb |>\n  specify(Number_Organic ~ Avg_Income_K) |>\n  generate(reps = 1000, type = \"bootstrap\") |>\n  fit()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,000 Ã— 3\n# Groups:   replicate [1,000]\n   replicate term         estimate\n       <int> <chr>           <dbl>\n 1         1 intercept      -6.99 \n 2         1 Avg_Income_K    0.866\n 3         2 intercept     -26.7  \n 4         2 Avg_Income_K    1.20 \n 5         3 intercept     -28.2  \n 6         3 Avg_Income_K    1.16 \n 7         4 intercept     -13.6  \n 8         4 Avg_Income_K    0.881\n 9         5 intercept     -20.2  \n10         5 Avg_Income_K    1.02 \n# â„¹ 1,990 more rows\n```\n\n\n:::\n:::\n\n\n## Bootstrapping pipeline IV\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|3\"}\nset.seed(210)\n\nboot_dist <- heb |>\n  specify(Number_Organic ~ Avg_Income_K) |>\n  generate(reps = 1000, type = \"bootstrap\") |>\n  fit()\n```\n:::\n\n\n## Visualize the bootstrap distribution\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\nboot_dist |>\n  filter(term == \"Avg_Income_K\") |>\n  ggplot(aes(x = estimate)) +\n  geom_histogram(bins = 15)\n```\n\n::: {.cell-output-display}\n![](07-slr-sim-testing_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## Compute the CI\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-slr-sim-testing_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## But first...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobs_fit <- heb |>\n  specify(Number_Organic ~ Avg_Income_K) |>\n  fit()\n\nobs_fit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 2\n  term         estimate\n  <chr>           <dbl>\n1 intercept     -14.7  \n2 Avg_Income_K    0.959\n```\n\n\n:::\n:::\n\n\n## Compute 95% confidence interval\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboot_dist |>\n  get_confidence_interval(\n    point_estimate = obs_fit,\n    level = 0.95,\n    type = \"percentile\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 3\n  term         lower_ci upper_ci\n  <chr>           <dbl>    <dbl>\n1 Avg_Income_K    0.771   1.24  \n2 intercept     -33.0     0.0473\n```\n\n\n:::\n:::\n\n\n# Hypothesis test for the slope\n\n## Research question and hypotheses\n\n\"Do the data provide sufficient evidence that $\\beta_1$ (the true slope for the population) is different from 0?\"\n\n. . .\n\n**Null hypothesis**: there is no linear relationship between `Number_Organic` and `Avg_Income_K`\n\n$$\nH_0: \\beta_1 = 0\n$$\n\n. . .\n\n**Alternative hypothesis**: there is a linear relationship between `Number_Organic` and `Avg_Income_K`\n\n$$\nH_A: \\beta_1 \\ne 0\n$$\n\n## Hypothesis testing as a court trial\n\n::: incremental\n-   **Null hypothesis**, $H_0$: Defendant is innocent\n-   **Alternative hypothesis**, $H_A$: Defendant is guilty\n-   **Present the evidence:** Collect data\n-   **Judge the evidence:** \"Could these data plausibly have happened by chance if the null hypothesis were true?\"\n    -   Yes: Fail to reject $H_0$\n    -   No: Reject $H_0$\n-   Not guilty $\\neq$ innocent $\\implies$ why we say \"fail to reject the null\" rather than \"accept the null\"\n:::\n\n## Hypothesis testing framework {.midi}\n\n::: incremental\n-   Start with a null hypothesis, $H_0$ that represents the status quo\n-   Set an alternative hypothesis, $H_A$ that represents the research question, i.e. claim we're testing\n-   Under the assumption that the null hypothesis is true, calculate a **p-value** (probability of getting outcome or outcome even more favorable to the alternative)\n    -   if the test results suggest that the data do not provide convincing evidence for the alternative hypothesis, stick with the null hypothesis\n    -   if they do, then reject the null hypothesis in favor of the alternative\n:::\n\n## Quantify the variability of the slope {.midi}\n\n**for testing**\n\n::: incremental\n-   Two approaches:\n    1.  Via simulation\n    2.  Via mathematical models\n-   Use **Randomization** to quantify the variability of the slope for the purpose of testing, *under the assumption that the null hypothesis is true*:\n    -   Simulate new samples from the original sample via permutation\n    -   Fit models to each of the samples and estimate the slope\n    -   Use features of the distribution of the permuted slopes to conduct a hypothesis test\n:::\n\n## Permutation, described {.smaller}\n\n::: columns\n::: {.column width=\"40%\"}\n-   Use permuting to simulate data under the assumption the null hypothesis is true and measure the natural variability in the data due to sampling, [**not**]{.underline} due to variables being correlated\n    -   Permute reponse variable to eliminate any existing relationship with explanatory variable\n-   Each `Number_Organic` value is randomly assigned to the `Avg_Household_K`, i.e. `Number_Organic` and `Avg_Household_K` are no longer matched for a given store\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 37 Ã— 3\n   Number_Organic_Original Number_Organic_Permuted Avg_Income_K\n                     <dbl>                   <dbl>        <dbl>\n 1                      36                      73         71.2\n 2                       4                      29         34.2\n 3                      28                      35         71.2\n 4                      31                      38         48.8\n 5                      78                      78         78.1\n 6                      14                      14         40.5\n 7                      12                      82         38.2\n 8                      18                      31         50.4\n 9                      38                       4         49.4\n10                      84                      12         66.1\n# â„¹ 27 more rows\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Permutation, visualized\n\n::: columns\n::: {.column width=\"50%\"}\n-   Each of the observed values for `area` (and for `price`) exist in both the observed data plot as well as the permuted `price` plot\n-   Permuting removes the relationship between `area` and `price`\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-slr-sim-testing_files/figure-revealjs/unnamed-chunk-13-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## Permutation, repeated\n\nRepeated permutations allow for quantifying the variability in the slope under the condition that there is no linear relationship (i.e., that the null hypothesis is true)\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-slr-sim-testing_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## Concluding the hypothesis test {.smaller}\n\n::: question\nIs the observed slope of $\\hat{\\beta_1} = 159$ (or an even more extreme slope) a likely outcome under the null hypothesis that $\\beta = 0$? What does this mean for our original question: \"Do the data provide sufficient evidence that $\\beta_1$ (the true slope for the population) is different from 0?\"\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-slr-sim-testing_files/figure-revealjs/unnamed-chunk-15-1.png){width=60%}\n:::\n:::\n\n\n\n\n## Permutation pipeline I\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|1|3|4\"}\nset.seed(1218)\n\nheb |>\n  specify(Number_Organic ~ Avg_Income_K)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse: Number_Organic (numeric)\nExplanatory: Avg_Income_K (numeric)\n# A tibble: 37 Ã— 2\n   Number_Organic Avg_Income_K\n            <dbl>        <dbl>\n 1             36         71.2\n 2              4         34.2\n 3             28         71.2\n 4             31         48.8\n 5             78         78.1\n 6             14         40.5\n 7             12         38.2\n 8             18         50.4\n 9             38         49.4\n10             84         66.1\n# â„¹ 27 more rows\n```\n\n\n:::\n:::\n\n\n## Permutation pipeline II\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|5\"}\nset.seed(1218)\n\nheb |>\n  specify(Number_Organic ~ Avg_Income_K) |>\n  hypothesize(null = \"independence\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse: Number_Organic (numeric)\nExplanatory: Avg_Income_K (numeric)\nNull Hypothesis: independence\n# A tibble: 37 Ã— 2\n   Number_Organic Avg_Income_K\n            <dbl>        <dbl>\n 1             36         71.2\n 2              4         34.2\n 3             28         71.2\n 4             31         48.8\n 5             78         78.1\n 6             14         40.5\n 7             12         38.2\n 8             18         50.4\n 9             38         49.4\n10             84         66.1\n# â„¹ 27 more rows\n```\n\n\n:::\n:::\n\n\n## Permutation pipeline III\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|6\"}\nset.seed(1218)\n\nheb |>\n  specify(Number_Organic ~ Avg_Income_K) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse: Number_Organic (numeric)\nExplanatory: Avg_Income_K (numeric)\nNull Hypothesis: independence\n# A tibble: 37,000 Ã— 3\n# Groups:   replicate [1,000]\n   Number_Organic Avg_Income_K replicate\n            <dbl>        <dbl>     <int>\n 1             38         71.2         1\n 2             56         34.2         1\n 3             28         71.2         1\n 4             14         48.8         1\n 5             29         78.1         1\n 6             36         40.5         1\n 7             84         38.2         1\n 8             18         50.4         1\n 9             96         49.4         1\n10             26         66.1         1\n# â„¹ 36,990 more rows\n```\n\n\n:::\n:::\n\n\n## Permutation pipeline IV\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|7\"}\nset.seed(1218)\n\nheb |>\n  specify(Number_Organic ~ Avg_Income_K) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  fit()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,000 Ã— 3\n# Groups:   replicate [1,000]\n   replicate term         estimate\n       <int> <chr>           <dbl>\n 1         1 intercept     47.8   \n 2         1 Avg_Income_K   0.0555\n 3         2 intercept     58.0   \n 4         2 Avg_Income_K  -0.0914\n 5         3 intercept     57.3   \n 6         3 Avg_Income_K  -0.0817\n 7         4 intercept     78.9   \n 8         4 Avg_Income_K  -0.394 \n 9         5 intercept     34.8   \n10         5 Avg_Income_K   0.244 \n# â„¹ 1,990 more rows\n```\n\n\n:::\n:::\n\n\n## Permutation pipeline V\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|3\"}\nset.seed(1218)\n\nheb |>\n  specify(Number_Organic ~ Avg_Income_K) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  fit()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,000 Ã— 3\n# Groups:   replicate [1,000]\n   replicate term         estimate\n       <int> <chr>           <dbl>\n 1         1 intercept     47.8   \n 2         1 Avg_Income_K   0.0555\n 3         2 intercept     58.0   \n 4         2 Avg_Income_K  -0.0914\n 5         3 intercept     57.3   \n 6         3 Avg_Income_K  -0.0817\n 7         4 intercept     78.9   \n 8         4 Avg_Income_K  -0.394 \n 9         5 intercept     34.8   \n10         5 Avg_Income_K   0.244 \n# â„¹ 1,990 more rows\n```\n\n\n:::\n:::\n\n\n## Visualize the null distribution\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\nnull_dist |>\n  filter(term == \"Avg_Income_K\") |>\n  gf_histogram(~estimate, color = \"white\")\n```\n\n::: {.cell-output-display}\n![](07-slr-sim-testing_files/figure-revealjs/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n## Reason around the p-value {.smaller}\n\n::: question\nIn a world where the there is no relationship between the the number of organic food options and the nearby average household income ($\\beta_1 = 0$), what is the probability that we observe a sample of 37 stores where the slope fo the model predicting the number of organic options from average household income is 0.96 or even more extreme?\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-slr-sim-testing_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n## Compute the p-value\n\n::: question\nWhat does this warning mean?\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_p_value(\n  null_dist,\n  obs_stat = obs_fit,\n  direction = \"two-sided\"\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Please be cautious in reporting a p-value of 0. This result is an approximation\nbased on the number of `reps` chosen in the `generate()` step.\nâ„¹ See `get_p_value()` (`?infer::get_p_value()`) for more information.\nPlease be cautious in reporting a p-value of 0. This result is an approximation\nbased on the number of `reps` chosen in the `generate()` step.\nâ„¹ See `get_p_value()` (`?infer::get_p_value()`) for more information.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 2\n  term         p_value\n  <chr>          <dbl>\n1 Avg_Income_K       0\n2 intercept          0\n```\n\n\n:::\n:::\n\n\n# Application exercise\n\n::: appex\nðŸ“‹ [AE 04: Randomization test for the slope](https://mat212fa24.netlify.app/ae/ae-04-sim-testing)\n:::\n\n",
    "supporting": [
      "07-slr-sim-testing_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}