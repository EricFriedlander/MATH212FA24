{
  "hash": "89c5ddfd910a33f710c35b7f8d7dcf6d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"SLR: Simulation-based inference\"\nsubtitle: \"Bootstrap confidence intervals for the slope\"\nauthor: \"Prof. Eric Friedlander\"\ndate: \"2024-08-28\"\ndate-format: \"MMM DD, YYYY\"\nfooter: \"[ðŸ”— MAT 212 - Fall 2024 -  Schedule](https://mat212fa24.netlify.app/schedule)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: false\n    incremental: false \n    chalkboard: true\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\nexecute:\n  freeze: auto\n  echo: true\n  cache: false\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\nbibliography: references.bib\n---\n\n\n\n\n\n<!-- # AE 03 Follow-up -->\n\n<!-- ## AE 03 Follow-up {.midi} -->\n\n<!-- **Goal:** Use simple linear regression to model the relationship between temperature and daily bike rentals in the **winter** season -->\n\n<!-- ```{r} -->\n<!-- #| include: false -->\n\n\n<!-- winter <- read_csv(\"../ae/data/dcbikeshare.csv\") |> -->\n<!--   mutate(season = case_when( -->\n<!--     season == 1 ~ \"winter\",  -->\n<!--     season == 2 ~ \"spring\",  -->\n<!--     season == 3 ~ \"summer\",  -->\n<!--     season == 4 ~ \"fall\" -->\n<!--   ),  -->\n<!--   season = factor(season)) |> -->\n<!--   filter(season == \"winter\") -->\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- #| echo: false -->\n<!-- #| eval: true -->\n<!-- #| out-width: \"65%\" -->\n\n<!-- ggplot(data = winter, aes(x = temp_orig, y = count)) +  -->\n<!--   geom_point() +  -->\n<!--   labs(x = \"Temperature in Celsius\",  -->\n<!--        y = \"Daily bike rentals\",  -->\n<!--        title = \"Capital Bikeshare daily bike rentals vs. temperature\",  -->\n<!--        subtitle = \"in winter months\") -->\n<!-- ``` -->\n\n<!-- ## AE 03 Follow-up -->\n\n<!-- **Statistical Model**: -->\n\n<!-- $$count = \\beta_0 +\\beta_1 ~ temp\\_orig + \\epsilon, \\hspace{5mm} \\epsilon \\sim N(0, \\sigma_{\\epsilon}^2)$$ -->\n\n<!-- . . . -->\n\n<!-- ```{r} -->\n<!-- winter_fit <- linear_reg() |> -->\n<!--   set_engine(\"lm\") |> -->\n<!--   fit(count ~ temp_orig, data = winter) -->\n\n<!-- tidy(winter_fit) |> kable(digits = 3) -->\n<!-- ``` -->\n\n<!-- ## AE 03 Follow-up -->\n\n<!-- Use the output to write out the estimated regression equation. -->\n\n<!-- $$ -->\n<!-- \\hat{count} =  -111.038 + 222.416 ~temp\\_orig -->\n<!-- $$ -->\n\n<!-- ::: aside -->\n<!-- LaTex: -->\n\n<!-- \\\\\\$\\\\\\$\\\\hat{count} = -111.038 + 222.416 \\~ temp\\\\\\_orig\\\\\\$\\\\\\$ -->\n<!-- ::: -->\n\n<!-- ::: callout-note -->\n<!-- ## Your turn! -->\n\n<!-- -   Interpret the slope in the context of the data. -->\n\n<!-- -   Why is there no error term in the regression equation? -->\n<!-- ::: -->\n\n# Simulation-based inference\n\nBootstrap confidence intervals\n\n## Topics\n\n-   Find range of plausible values for the slope using bootstrap confidence intervals\n\n## Computational setup\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)   # for data wrangling and visualization\nlibrary(tidymodels)  # for modeling\nlibrary(openintro)   # for Duke Forest dataset\nlibrary(scales)      # for pretty axis labels\nlibrary(glue)        # for constructing character strings\nlibrary(knitr)       # for neatly formatted tables\nlibrary(kableExtra)  # also for neatly formatted tablesf\n\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_bw(base_size = 16))\n```\n:::\n\n\n## [Data: San Antonio Income & Organic Food Access]{.r-fit-text}\n\n::: columns\n::: {.column width=\"60%\"}\n-   Average household income (per zip code) and number of organic vegetable offerings in San Antonio, TX\n-   Data from HEB website, compiles by high school student Linda Saucedo, Fall 2019\n-   Source: [**Skew The Script**](https://skewthescript.org/3-1)\n:::\n\n::: {.column width=\"40%\"}\n![](images/HEB-Logo.jpg)\n:::\n:::\n\n**Goal**: Use the average household income to understand variation in access to organic foods.\n\n## Exploratory data analysis\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nheb <- read_csv(\"data/HEBIncome.csv\") |> \n  mutate(Avg_Income_K = Avg_Household_Income/1000)\n\nggplot(heb, aes(x = Avg_Income_K, y = Number_Organic)) +\n  geom_point(alpha = 0.7) +\n  labs(\n    x = \"Average Household Income (in thousands)\",\n    y = \"Number of Organic Vegetables\",\n  ) +\n  scale_x_continuous(labels = label_dollar())\n```\n\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-1-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Modeling {.midi}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nheb_fit <- lm(Number_Organic ~ Avg_Income_K, data = heb)\n\ntidy(heb_fit) |>\n  kable(digits=2) #neatly format table to 2 digits\n```\n\n::: {.cell-output-display}\n\n\n|term         | estimate| std.error| statistic| p.value|\n|:------------|--------:|---------:|---------:|-------:|\n|(Intercept)  |   -14.72|      9.30|     -1.58|    0.12|\n|Avg_Income_K |     0.96|      0.13|      7.50|    0.00|\n\n\n:::\n:::\n\n\n. . .\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n-   **Intercept:** HEBs in Zip Codes with an average household income of \\$0 are expected to have -14.72 organic vegetable options, on average.\n    -   Is this interpretation useful?\n-   **Slope:** For each additional \\$1,000 in average household income, we expect the number of organic options available at nearby HEBs to increase by 0.96, on average.\n\n## From sample to population {.midi}\n\n> For each additional $1,000 in average household income, we expect the number of organic options available at nearby HEBs to increase by 0.96, on average.\n\n<br>\n\n-   Estimate is valid for the single sample of 37 HEBs\n-   What if we're not interested quantifying the relationship between the size and price of a house in this single sample?\n-   What if we want to say something about the relationship between these variables for all supermarkets in America?\n\n## Statistical inference\n\n-   **Statistical inference** refers to ideas, methods, and tools for to generalizing the single observed sample to make statements (inferences) about the population it comes from\n\n-   For our inferences to be valid, the sample should be random and representative of the population we're interested in\n\n## Inference for simple linear regression\n\n::: incremental\n\n-   Calculate a confidence interval for the slope, $\\beta_1$\n\n-   Conduct a hypothesis test for the slope,$\\beta_1$\n\n-   Why not $\\beta_0$?\n\n-   We can but it isn't super interesting typically\n\n:::\n\n# Confidence interval for the slope\n\n## Confidence interval {.midi}\n\n::: incremental\n-   **Confidence interval**: plausible range of values for a population parameter\n-   single point estimate $\\implies$ fishing in a murky lake with a spear, confidence interval $\\implies$ fishing with a net\n    -   We can throw a spear where we saw a fish but we will probably miss, if we toss a net in that area, we have a good chance of catching the fish\n    -  If we report a point estimate, we probably will not hit the exact population parameter, but if we report a range of plausible values we have a good shot at capturing the parameter\n    -   High confidence $\\implies$ wider interval (larger net)\n-   Remember: single CI $\\implies$ either you hit parameter or you don't\n    -   [Favorite Visualization](https://rpsychologist.com/d3/ci/)\n:::\n\n## Confidence interval for the slope {.midi}\n\nA confidence interval will allow us to make a statement like \"*For each \\$1K in average income, the model predicts the number of organic vegetables available at local supermarkets to be higher, on average, by 0.96, plus or minus X options.*\"\n\n. . .\n\n-   Should X be 1? 2? 3?\n\n-   If we were to take another sample of 37 would we expect the slope calculated based on that sample to be exactly 0.96? Off by 1? 2? 3?\n\n-   The answer depends on how variable (from one sample to another sample) the sample statistic (the slope) is\n\n-   We need a way to quantify the variability of the sample statistic\n\n## Quantify the variability of the slope {.midi}\n\n**for estimation**\n\n::: incremental\n-   Two approaches:\n    1.  Via simulation (what we'll do today)\n    2.  Via mathematical models (what we'll do in the soon)\n-   **Bootstrapping** to quantify the variability of the slope for the purpose of estimation:\n    -   Generate new samples by sampling with replacement from the original sample\n    -   Fit models to each of the new samples and estimate the slope\n    -   Use features of the distribution of the bootstrapped slopes to construct a confidence interval\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n## Original Sample\n\n<!-- Fix the scales for these slides, so the difference in slopes is easier to see-->\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Bootstrap sample 1\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n## Bootstrap sample 2\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Bootstrap sample 3\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n## Bootstrap sample 4\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n## Bootstrap sample 5\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Bootstrap samples 1 - 5\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Bootstrap samples 1 - 100\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Slopes of bootstrap samples\n\n::: question\n**Fill in the blank:** For each additional \\$1k in average household income, the model predicts the number of organic vegetables available to be higher, on average, by 0.96, plus or minus \\_\\_\\_.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Slopes of bootstrap samples\n\n::: question\n**Fill in the blank:** For each additional \\$1k in average household income, the model predicts the number of organic vegetables available to be higher, on average, by 0.96, plus or minus \\_\\_\\_.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Confidence level\n\n::: question\nHow confident are you that the true slope is between 0.8 and 1.2? How about 0.9 and 1.0? How about 1.0 and 1.4?\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## 95% confidence interval {.smaller}\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-slr-bootstrap_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=70%}\n:::\n:::\n\n\n::: incremental\n-   **95% bootstrapped confidence interval**: bounded by the middle 95% of the bootstrap distribution\n-   We are 95% confident that for each additional \\$1K in average household income, the model predicts the number of organic vegetables options at local supermarkets to be higher, on average, by 0.81 to 1.31.\n:::\n\n<!-- # Application exercise -->\n\n<!-- ::: appex -->\n<!-- ðŸ“‹ [AE 04: Bootstrap confidence intervals](https://sta210-fa23.netlify.app/ae/ae-04-bootstrap.html) -->\n<!-- ::: -->\n\n## Computing the CI for the slope I\n\nCalculate the observed slope:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(infer) # package that does Simulation-Based Inference\n\nobserved_fit <- heb |>\n  specify(Number_Organic ~ Avg_Income_K) |>\n  fit()\n\nobserved_fit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 2\n  term         estimate\n  <chr>           <dbl>\n1 intercept     -14.7  \n2 Avg_Income_K    0.959\n```\n\n\n:::\n:::\n\n\n## Computing the CI for the slope II {.smaller}\n\nTake `100` bootstrap samples and fit models to each one:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,5,6\"}\nset.seed(1120)\n\nboot_fits <- heb |>\n  specify(Number_Organic ~ Avg_Income_K) |>\n  generate(reps = 100, type = \"bootstrap\") |>\n  fit()\n\nboot_fits\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 200 Ã— 3\n# Groups:   replicate [100]\n   replicate term         estimate\n       <int> <chr>           <dbl>\n 1         1 intercept     -40.9  \n 2         1 Avg_Income_K    1.25 \n 3         2 intercept     -23.9  \n 4         2 Avg_Income_K    1.09 \n 5         3 intercept     -18.6  \n 6         3 Avg_Income_K    1.02 \n 7         4 intercept      -1.96 \n 8         4 Avg_Income_K    0.828\n 9         5 intercept     -15.1  \n10         5 Avg_Income_K    0.951\n# â„¹ 190 more rows\n```\n\n\n:::\n:::\n\n\n## Computing the CI for the slope III\n\n**Percentile method:** Compute the 95% CI as the middle 95% of the bootstrap distribution:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nget_confidence_interval(\n  boot_fits, \n  point_estimate = observed_fit, \n  level = 0.95,\n  type = \"percentile\" #default method\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 3\n  term         lower_ci upper_ci\n  <chr>           <dbl>    <dbl>\n1 Avg_Income_K    0.822     1.27\n2 intercept     -34.5      -2.56\n```\n\n\n:::\n:::\n\n\n## Precision vs. accuracy\n\n::: question\nIf we want to be very certain that we capture the population parameter, should we use a wider or a narrower interval? What drawbacks are associated with using a wider interval?\n:::\n\n. . .\n\n![](images/05/garfield.png)\n\n## Precision vs. accuracy\n\n::: question\nHow can we get best of both worlds -- high precision and high accuracy?\n:::\n\n## Changing confidence level\n\n::: question\nHow would you modify the following code to calculate a 90% confidence interval? How would you modify it for a 99% confidence interval?\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|4\"}\nget_confidence_interval(\n  boot_fits, \n  point_estimate = observed_fit, \n  level = 0.95,\n  type = \"percentile\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 3\n  term         lower_ci upper_ci\n  <chr>           <dbl>    <dbl>\n1 Avg_Income_K    0.822     1.27\n2 intercept     -34.5      -2.56\n```\n\n\n:::\n:::\n\n\n## Changing confidence level {.midi}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n## confidence level: 90%\nget_confidence_interval(\n  boot_fits, point_estimate = observed_fit, \n  level = 0.90, type = \"percentile\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 3\n  term         lower_ci upper_ci\n  <chr>           <dbl>    <dbl>\n1 Avg_Income_K    0.829     1.23\n2 intercept     -31.7      -3.76\n```\n\n\n:::\n\n```{.r .cell-code}\n## confidence level: 99%\nget_confidence_interval(\n  boot_fits, point_estimate = observed_fit, \n  level = 0.99, type = \"percentile\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 3\n  term         lower_ci upper_ci\n  <chr>           <dbl>    <dbl>\n1 Avg_Income_K    0.795    1.36 \n2 intercept     -43.3     -0.535\n```\n\n\n:::\n:::\n\n\n## Recap {.smaller}\n\n-   **Population:** Complete set of observations of whatever we are studying, e.g., people, tweets, photographs, etc. (population size = $N$)\n\n-   **Sample:** Subset of the population, ideally random and representative (sample size = $n$)\n\n-   Sample statistic $\\ne$ population parameter, but if the sample is good, it can be a good estimate\n\n-   **Statistical inference:** Discipline that concerns itself with the development of procedures, methods, and theorems that allow us to extract meaning and information from data that has been generated by stochastic (random) process\n\n-   We report the estimate with a confidence interval, and the width of this interval depends on the variability of sample statistics from different samples from the population\n\n-   Since we can't continue sampling from the population, we bootstrap from the one sample we have to estimate sampling variability\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}