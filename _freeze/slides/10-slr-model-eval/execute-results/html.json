{
  "hash": "d4919e3e0c7d227206b179395cab2262",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"SLR: Model evaluation\"\nauthor: \"Prof. Eric Friedlander\"\ndate: \"2024-09-11\"\ndate-format: \"MMM DD, YYYY\"\nfooter: \"[üîó MAT 212 - Fall 2024 -  Schedule](https://mat212fa24.netlify.app/schedule)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: false\n    incremental: false \n    chalkboard: true\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\nexecute:\n  freeze: auto\n  echo: true\n  cache: false\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\nbibliography: references.bib\n---\n\n\n\n\n# Questions from last class?\n\n# Model conditions\n\n## Model conditions\n\n1.  **Linearity:** There is a linear relationship between the outcome and predictor variables\n2.  **Constant variance:** The variability of the errors is equal for all values of the predictor variable\n3.  **Normality:** The errors follow a normal distribution\n4.  **Independence:** The errors are independent from each other\n\n## Computational set up\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)   # for data wrangling and visualization\nlibrary(ggformula)   # for plotting using formulas\nlibrary(broom)       # for formatting model output\nlibrary(scales)      # for pretty axis labels\nlibrary(knitr)       # for pretty tables\nlibrary(patchwork)   # arrange plots\n\n# HEB Dataset\nheb <- read_csv(\"data/HEBIncome.csv\") |> \n  mutate(Avg_Income_K = Avg_Household_Income/1000)\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_bw(base_size = 20))\n```\n:::\n\n\n## Regression model, revisited\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nheb_fit <- lm(Number_Organic ~ Avg_Income_K, data = heb)\n\ntidy(heb_fit) |>\n  kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|term         | estimate| std.error| statistic| p.value|\n|:------------|--------:|---------:|---------:|-------:|\n|(Intercept)  |  -14.719|     9.298|    -1.583|   0.122|\n|Avg_Income_K |    0.959|     0.128|     7.505|   0.000|\n\n\n:::\n:::\n\n\n# Model evaluation\n\n## Two statistics {.small}\n\n::: incremental\n-   **R-squared**, $R^2$, **Coefficient of Determination** : Percentage of variability in the outcome explained by the regression model (in the context of SLR, the predictor)\n\n    $$\n    R^2 = Cor(x,y)^2 = Cor(y, \\hat{y})^2\n    $$\n\n-   **Root mean square error, RMSE**: A measure of the average error (average difference between observed and predicted values of the outcome)\n\n    $$\n    RMSE = \\sqrt{\\frac{\\sum_{i = 1}^n (y_i - \\hat{y}_i)^2}{n}}\n    $$\n:::\n\n. . .\n\n::: question\nWhat indicates a good model fit? Higher or lower $R^2$? Higher or lower RMSE?\n:::\n\n## $R^2$\n\n::: incremental\n-   Ranges between 0 (terrible predictor) and 1 (perfect predictor)\n\n-   Has no units\n\n-   Calculate with `glance()` or `summary()` using the fitted model:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nglance(heb_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 √ó 12\n  r.squared adj.r.squared sigma statistic       p.value    df logLik   AIC   BIC\n      <dbl>         <dbl> <dbl>     <dbl>         <dbl> <dbl>  <dbl> <dbl> <dbl>\n1     0.617         0.606  17.5      56.3 0.00000000863     1  -157.  321.  325.\n# ‚Ñπ 3 more variables: deviance <dbl>, df.residual <int>, nobs <int>\n```\n\n\n:::\n\n```{.r .cell-code}\nglance(heb_fit)$r.squared\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6167334\n```\n\n\n:::\n:::\n\n:::\n\n## Interpreting $R^2$ {.smaller}\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n::: poll\nüó≥Ô∏è **Discussion**\n\n::: midi\n::: poll\nThe $R^2$ of the model for `Number_Organic` from `Average_Income_K` is 61.7%. Which of the following is the correct interpretation of this value?\n:::\n\n1.  `Avg_Income_K` correctly predicts 61.7% of `Number_Organic` in San Anontio HEBs.\n2.  61.7% of the variability in `Number_Organic` can be explained by `Avg_Income_K`.\n3.  61.7% of the variability in `Avg_Income_K` can be explained by `Number_Organic`.\n4.  61.7% of the time `Number_Organic` can be predicted by `Avg_Income_K`.\n:::\n:::\n\n## RMSE\n\n::: incremental\n-   Ranges between 0 (perfect predictor) and infinity (terrible predictor)\n\n-   Same units as the response variable\n\n-   Calculate with `glance()` using the augmented data:\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    glance(heb_fit)$sigma\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 17.46292\n    ```\n    \n    \n    :::\n    :::\n\n\n-   The value of RMSE is not very meaningful on its own, but it's useful for comparing across models (more on this when we get to regression with multiple predictors)\n:::\n\n<!-- # Application exercise -->\n\n<!-- ::: appex -->\n<!-- üìã [sta210-fa23.netlify.app/ae/ae-06-conditions](https://sta210-fa23.netlify.app/ae/ae-06-conditions.html) -->\n<!-- ::: -->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}