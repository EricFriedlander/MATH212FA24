{
  "hash": "5c85c9c394d8256cd3654c0f243b29d5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"SLR: Conditions\"\nauthor: \"Prof. Eric Friedlander\"\ndate: \"2024-09-13\"\ndate-format: \"MMM DD, YYYY\"\nfooter: \"[🔗 MAT 212 - Fall 2024 -  Schedule](https://mat212fa24.netlify.app/schedule)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: false\n    incremental: false \n    chalkboard: true\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\nexecute:\n  freeze: auto\n  echo: true\n  cache: false\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\nbibliography: references.bib\n---\n\n\n\n\n# Application exercise\n\n::: appex\n📋 [AE - 5 Mathematical Models](https://mat212fa24.netlify.app/ae/ae-05-math-models)\n:::\n\n# Questions from last class?\n\n## Computational set up\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)   # for data wrangling and visualization\nlibrary(ggformula)   # for plotting using formulas\nlibrary(broom)       # for formatting model output\nlibrary(scales)      # for pretty axis labels\nlibrary(knitr)       # for pretty tables\nlibrary(kableExtra)  # also for pretty tables\nlibrary(patchwork)   # arrange plots\n\n# HEB Dataset\nheb <- read_csv(\"data/HEBIncome.csv\") |> \n  mutate(Avg_Income_K = Avg_Household_Income/1000)\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_bw(base_size = 20))\n```\n:::\n\n\n## Regression model, revisited\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nheb_fit <- lm(Number_Organic ~ Avg_Income_K, data = heb)\n\ntidy(heb_fit) |>\n  kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|term         | estimate| std.error| statistic| p.value|\n|:------------|--------:|---------:|---------:|-------:|\n|(Intercept)  |  -14.719|     9.298|    -1.583|   0.122|\n|Avg_Income_K |    0.959|     0.128|     7.505|   0.000|\n\n\n:::\n:::\n\n\n## Mathematical representation, visualized {.midi}\n\n$$\nY|X \\sim N(\\beta_0 + \\beta_1 X, \\sigma_\\epsilon^2)\n$$\n\n![Image source: *Introduction to the Practice of Statistics (5th ed)*](images/06/regression.png){fig-align=\"center\"}\n\n# Model conditions\n\n## Model conditions\n\n1.  **Linearity:** There is a linear relationship between the outcome and predictor variables\n2.  **Constant variance:** The variability of the errors is equal for all values of the predictor variable\n3.  **Normality:** The errors follow a normal distribution\n4.  **Independence:** The errors are independent from each other\n\n## Linearity\n\n-   If the linear model, $\\hat{y}_i = \\hat{\\beta}_0 + \\hat{\\beta}_1x_i$, adequately describes the relationship between $X$ and $Y$, then the residuals should reflect random (chance) error\n\n-   To assess this, we can look at a plot of the residuals vs. the fitted values\n\n-   **Linearity satisfied** if there is no distinguishable pattern in the residuals plot, i.e. the residuals should be randomly scattered\n\n-   A non-random pattern (e.g. a parabola) suggests a linear model does not adequately describe the relationship between $X$ and $Y$\n\n## Linearity\n\n✅ The residuals vs. fitted values plot should show a random scatter of residuals (no distinguishable pattern or structure)\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-slr-conditions_files/figure-revealjs/res-vs-fit-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n## The augment function {.smaller}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nheb_aug <- augment(heb_fit)\n\nhead(heb_aug) |> kable()\n```\n\n::: {.cell-output-display}\n\n\n| Number_Organic| Avg_Income_K|  .fitted|     .resid|      .hat|   .sigma|   .cooksd| .std.resid|\n|--------------:|------------:|--------:|----------:|---------:|--------:|---------:|----------:|\n|             36|       71.186| 53.55498| -17.554983| 0.0272386| 17.45293| 0.0145449| -1.0192493|\n|              4|       34.234| 18.11468| -14.114677| 0.0925015| 17.53471| 0.0366889| -0.8484596|\n|             28|       71.186| 53.55498| -25.554983| 0.0272386| 17.15160| 0.0308219| -1.4837325|\n|             31|       48.760| 32.04642|  -1.046423| 0.0493994| 17.71691| 0.0000981| -0.0614599|\n|             78|       78.096| 60.18230|  17.817702| 0.0312671| 17.44374| 0.0173428|  1.0366517|\n|             14|       40.506| 24.13009| -10.130092| 0.0711183| 17.62593| 0.0138683| -0.6018889|\n\n\n:::\n:::\n\n\n## Residuals vs. fitted values (code)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nheb_aug <- augment(heb_fit)\n\ngf_point(.resid ~ .fitted, data = heb_aug) |> \n  gf_hline(yintercept = 0, linetype = \"dashed\") |> \n  gf_labs(\n    x = \"Fitted value\", y = \"Residual\",\n    title = \"Residuals vs. fitted values\"\n  )\n```\n:::\n\n\n## Non-linear relationships\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-slr-conditions_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-slr-conditions_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n:::\n\n## Constant variance {.midi}\n\n-   If the spread of the distribution of $Y$ is equal for all values of $X$ then the spread of the residuals should be approximately equal for each value of $X$\n\n-   To assess this, we can look at a plot of the residuals vs. the fitted values\n\n-   **Constant variance satisfied** if the vertical spread of the residuals is approximately equal as you move from left to right (i.e. there is no \"fan\" pattern)\n\n-   A fan pattern suggests the constant variance assumption is not satisfied and transformation or some other remedy is required (more on this later in the semester)\n\n-   **CAREFUL**: Inconsistent distribution of $X$s can make it seem as if there is non-constant variance\n\n## Constant variance\n\n✅ The vertical spread of the residuals is relatively constant across the plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-slr-conditions_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Non-constant variance\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-slr-conditions_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-slr-conditions_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n:::\n\n- Think: Is my error/variance proportional to the thing I'm predicting?\n\n\n## Normality {.midi}\n\n-   The linear model assumes that the distribution of $Y$ is Normal for every value of $X$\n\n-   This is impossible to check in practice, so we will look at the overall distribution of the residuals to assess if the normality assumption is satisfied\n\n-   **Normality satisfied** if a histogram of the residuals is approximately normal\n\n    -   Can also check that the points on a normal QQ-plot falls along a diagonal line\n\n-   Most inferential methods for regression are robust to some departures from normality, so we can proceed with inference if the sample size is sufficiently large, $n > 30$\n\n## Normality\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-slr-conditions_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Check normality using a QQ-plot\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ngf_histogram(~.resid, data = heb_aug,\n             bins=7, color = \"white\") |> \n  gf_labs(\n    x = \"Residual\",\n    y = \"Count\",\n    title = \"Histogram of residuals\"\n  )\n```\n\n::: {.cell-output-display}\n![](10-slr-conditions_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n```         \n```\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ngf_qq(~.resid, data = heb_aug) |> \n  gf_qqline() |>  \n  gf_labs(x = \"Theoretical quantile\", \n       y = \"Observed quantile\", \n       title = \"Normal QQ-plot of residuals\")\n```\n\n::: {.cell-output-display}\n![](10-slr-conditions_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=80%}\n:::\n:::\n\n:::\n:::\n\n-   Assess whether residuals lie along the diagonal line of the Quantile-quantile plot (QQ-plot).\n\n-   If so, the residuals are normally distributed.\n\n## Normality\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-slr-conditions_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n❌ The residuals do not appear to follow a normal distribution, because the points do not lie on the diagonal line, so normality is not satisfied.\n\n✅ The sample size  $n =  37 > 30$, so the sample size is large enough to relax this condition and proceed with inference.\n\n\n## Independence {.midi}\n\n-   We can often check the independence assumption based on the context of the data and how the observations were collected\n\n-   Two common violations of the independence assumption:\n\n    -   **Serial Effect**: If the data were collected over time, plot the residuals in time order to see if there is a pattern (serial correlation)\n\n    -   **Cluster Effect**: If there are subgroups represented in the data that are not accounted for in the model (e.g., type of supermarket), you can color the points in the residual plots by group to see if the model systematically over or under predicts for a particular subgroup\n\n## Independence {.nonincremental}\n\nRecall the description of the data:\n\n> -   Average household income (per zip code) and number of organic vegetable offerings in San Antonio, TX\n>\n> -   Data from HEB website, compiled by high school student Linda Saucedo, Fall 2019\n\n<br>\n\n❌ Based on the information we have,  it's  unclear if the data are independent. In fact, I'd guess that they are likely geographically correlated.\n\n## Recap\n\nUsed residual plots to check conditions for SLR:\n\n::: columns\n::: {.column width=\"50%\"}\n::: nonincremental\n-   Linearity\n-   Constant variance\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: nonincremental\n-   Normality\n-   Independence\n:::\n:::\n:::\n\n. . .\n\n::: question\n1. Which of these conditions are required for fitting a SLR (and not doing any inference)? \n2. Which for simulation-based inference for the slope for an SLR? \n3. Which for inference with mathematical models?\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_6f79a611\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n",
    "supporting": [
      "10-slr-conditions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}