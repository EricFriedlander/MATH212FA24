{
  "hash": "05df3532f30906798af290395b989e96",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"AE 06: Model Conditions\"\nsubtitle: \"Songs on Spotify\"\nauthor: \"Driver: _______, Reporter: _______, Gopher: ________\"\ndate: \"Sep 13, 2024\"\neditor: visual\nexecute: \n  warning: false\n  message: false\nformat: \n  pdf:\n    pdf-engine: pdflatex\n---\n\n\n::: callout-important\n-   Open [RStudio](https://rstudio.collegeofidaho.edu/) and create a subfolder in your AE folder called \"AE-06\"\n\n-   Go to the [Canvas](https://cofi.instructure.com/courses/15692/assignments/181928) and locate your `AE 06` assignment to get started.\n\n-   Upload the `ae-06.qmd` and `spotify-popular.csv` files into the folder you just created. The `.qmd` and PDF responses are due in Canvas no later than Monday, September 16 at 11:59pm.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggformula)\nlibrary(broom)\nlibrary(knitr)\nlibrary(patchwork) #arrange plots in a grid\n```\n:::\n\n\n## Introduction\n\nThis is a continuation of AE-05. The **Data** section below is the same as in that exercise. Feel free to skip it if you feel you remember everything about the data set or simply use it as a reference when needed.\n\n## Data\n\nThe data set for this assignment is a subset from the [Spotify Songs](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-01-21/readme.md) Tidy Tuesday data set. The data were originally obtained from Spotify using the **spotifyr** R package.\n\nIt contains numerous characteristics for each song. You can see the full list of variables and definitions [here](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-01-21/readme.md). This analysis will focus specifically on the following variables:\n\n| variable         | class     | description                                                                                                                                                                                                                                                                                                                                                                               |\n|:------------|:------------|:----------------------------------------------|\n| track_id         | character | Song unique ID                                                                                                                                                                                                                                                                                                                                                                            |\n| track_name       | character | Song Name                                                                                                                                                                                                                                                                                                                                                                                 |\n| track_artist     | character | Song Artist                                                                                                                                                                                                                                                                                                                                                                               |\n| track_popularity | double    | Song Popularity (0-100) where higher is better                                                                                                                                                                                                                                                                                                                                            |\n| energy           | double    | Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy. |\n| valence          | double    | A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).                                                                                                                                         |\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspotify <- read_csv(\"spotify-popular.csv\")\n```\n:::\n\n\nAre high energy songs more positive? To answer this question, we'll analyze data on some of the most popular songs on Spotify, i.e. those with `track_popularity >= 80`. We'll use linear regression to fit a model to predict a song's positiveness (`valence`) based on its energy level (`energy`).\n\nBelow are plots as part of the exploratory data analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- gf_histogram(~valence, data = spotify) |>  \n  gf_labs(title = \"Distribution of Valence\", \n       subtitle = \" for Popular songs on Spotify\", \n       x = \"Valence\")\n\np2 <- gf_histogram(~energy, data = spotify) |> \n  gf_labs(title = \"Distribution of Energy\", \n       subtitle = \"for Popular songs on Spotify\", \n       x = \"Energy\")\np1 + p2 # The patchwork package will arrange your plots for you\n```\n\n::: {.cell-output-display}\n![](ae-06-conditions_files/figure-pdf/univariate-eda-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_point(valence ~ energy, data = spotify) |> \n  gf_labs(title = \"Valence vs. Energy\", \n       subtitle = \"Popular songs on Spotify\", \n       x = \"Energy\", \n       y = \"Valence\")\n```\n\n::: {.cell-output-display}\n![](ae-06-conditions_files/figure-pdf/bivariate-eda-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n## Exercise 0\n\nFit a model using the `energy` of a song to predict its `valence`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## add code\n```\n:::\n\n\n## Exercise 1\n\nLast time, we were too hasty in performing statistical inference. We need to make sure you data satifies the four conditions of inference. Let's check those model conditions now. Fill in the code below to use the `augment()` function to create a new data frame containing the residuals and fitted values (among other information)/\n\n::: callout-important\nNote: Remove `#|eval: false` from the code chunk after you have filled in the code.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspotify_aug <- augment(_____)\n```\n:::\n\n\n## Exercise 3\n\nMake a plot of the residual vs. fitted values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n## Exercise 4\n\nFill in the code to make a histogram of the residuals and a normal QQ-plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresid_hist <- gf_histogram(~____, data = ____)) |> \n  gf_labs(x = \"_____\", \n       y = \"_____\", \n       title = \"____\")\n\nresid_qq <- gf_qq(~____, data = ____)  |>\n  gf_qqline() |> \n  gf_labs(x = \"_____\", \n       y = \"_____\", \n       title = \"____\")\n\nresid_hist + resid_qq\n```\n:::\n\n\n## Exercise 5\n\nAssess the four model conditions. Use the plots from the previous exercises to help make the assessment.\n\n-   Linearity\n-   Constant variance\n-   Normality\n-   Independence\n\n::: callout-important\nTo submit the AE:\n\n- Render the document to produce the PDF with all of your work from today's class.\n- Upload your QMD and PDF files to the Canvas assignment.\n:::\n",
    "supporting": [
      "ae-06-conditions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}