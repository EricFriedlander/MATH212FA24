---
title: "AE 03: Bootstrap confidence intervals"
author: "Driver: ____, Reporter: _____, Gopher: _____"
subtitle: "Bikeshare"
date: "Sep 6, 2024"
editor: visual
format: pdf
---

::: callout-important
-   Open [RStudio](https://rstudio.collegeofidaho.edu/) and create a subfolder in your AE folder called "AE-03"

-   Go to the [course Canvas page](https://cofi.instructure.com/courses/15692/assignments/181095) and locate your `AE 03` assignment to get started.

-   Upload the `ae-03.qmd` and `dcbikeshare.csv` files into the folder you just created.

The `.qmd` and `.pdf` files uploaded to Canvas no later than Monday, September 9 at 11:59pm.
:::

```{r load-packages}
#| message: false
library(tidyverse)
library(ggformula)
library(broom)
library(infer)
# library(openintro)
library(kableExtra)
```

## Data

Our dataset contains daily rentals from the Capital Bikeshare in Washington, DC in 2011 and 2012 filtered to only contain the winter months. It was obtained from the `dcbikeshare` data set in the `dsbox` R package.

We will focus on the following variables in the analysis:

-   `count`: total bike rentals
-   `temp_orig`: Temperature in degrees Celsius

```{r glimpse-data}
winter <- read_csv("dcbikeshare.csv") |>
  mutate(season = case_when(
    season == 1 ~ "winter",
    season == 2 ~ "spring",
    season == 3 ~ "summer",
    season == 4 ~ "fall"
  ),
  season = factor(season)) |>
  filter(season == "winter")

glimpse(winter)
```

## Exploratory data analysis

```{r scatterplot}
gf_point(count ~ temp_orig, data = winter, alpha = 0.7) |> 
  gf_labs(
    x = "Temperature (C)",
    y = "Number of Bike Rentals",
  )
```

## Model

```{r fit-model}
model_fit <- lm(count ~ temp_orig, data = winter)

tidy(model_fit) |>
  kable(digits = 2)
```

## Bootstrap confidence interval

### 1. Calculate the observed fit (slope)

```{r observed-fit}

observed_fit <- winter |>
  specify(count ~ temp_orig) |>
  fit()

observed_fit
```

### 2. Take *n* bootstrap samples and fit models to each one.

Fill in the code, then set `eval: true` .

```{r bootstrap}
#| eval: false

n = 100
set.seed(212)

boot_fits <- ______ |>
  specify(______) |>
  generate(reps = ____, type = "bootstrap") |>
  fit()

boot_fits
```

-   Why do we set a seed before taking the bootstrap samples?

-   Make a histogram of the bootstrap samples to visualize the bootstrap distribution.

    ```{r boot-hist}
    # Code for histogram
    ```

### 3. Compute the 95% confidence interval as the middle 95% of the bootstrap distribution

Fill in the code, then set `eval: true` .

```{r calc-ci}
#| eval: false

get_confidence_interval(
  boot_fits, 
  point_estimate = _____, 
  level = ____,
  type = "percentile"
)
```

## Changing confidence level

### Modify the code from Step 3 to create a 90% confidence interval.

```{r 90-ci}
# Paste code for 90% confidence interval
```

### Modify the code from Step 3 to create a 99% confidence interval.

```{r 99-ci}
# Paste code for 90% confidence interval
```

-   Which confidence level produces the most accurate confidence interval (90%, 95%, 99%)? Explain

-   Which confidence level produces the most precise confidence interval (90%, 95%, 99%)? Explain

-   If we want to be very certain that we capture the population parameter, should we use a wider or a narrower interval? What drawbacks are associated with using a wider interval?

::: callout-important
To submit the AE:

-   Render the document to produce the PDF file with all of your work from today's class.

-   Upload your .qmd file and your .pdf file to Canvas. Note, please unzip the folder you download from the RStudio platform before uploading it.
:::
